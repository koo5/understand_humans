/* 
populate our initial scene using a nice prolog syntax for a subset of rdf.
prolog 'add' facts will be found by 'initial scene'. Each 'add' fact contains a 'value',
which will be translated into rdf. The syntax of those 'value's is:
	<object type>(
		<property name>(<value>),
		...
	)
'pl' terms are 'add'ed in a special way, they contain prolog terms, but they will be output as rdf structures too.

*/

add(
	toolbar(
		'has buttons'([
			button(
				'has action'('basic actions':'add object')
			),
			
		])
	)
).


add(
	action(
		id('basic actions':'add object'),
		body(
			pl(
				call_with_scene_io('add object'))))).

'add object'(I, O) :-
	append(I, [($>id, 
			 
			 
			 
			 
			 
			 
			 
			 
<toolbar>
	<has_buttons>
		<button>
			<has_action>
				<ref id='basic actions':'add object'>
			/
		/
		<button>
			<has_action>
				<ref id='basic actions':'add object'>
			/
		/
		
		
		
		
		
===============













[
	a markup
	

















